<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ca.digitalcave.buddi.live.db.Transactions">
	<resultMap id="transaction" type="ca.digitalcave.buddi.live.model.Transaction">
		<id column="t_id" property="id" />
		<result column="uuid" property="uuid"/>
		<result column="user_id" property="userId"/>
		<result column="description" property="description"/>
		<result column="number" property="number"/>
		<result column="date" property="date"/>
		<result column="deleted" property="deleted"/>
		<result column="t_created" property="created"/>
		<result column="t_modified" property="modified"/>
		<collection property="splits" javaType="list" ofType="ca.digitalcave.buddi.live.model.Split">
			<id column="s_id" property="id" />
			<result column="t.id" property="transactionId"/>
			<result column="amount" property="amount"/>
			<result column="from_source" property="fromSource"/>
			<result column="to_source" property="toSource"/>
			<result column="memo" property="memo"/>
			<result column="s_created" property="created"/>
			<result column="s_modified" property="modified"/>
			
			<result column="from_source_name" property="fromSourceName"/>
			<result column="to_source_name" property="toSourceName"/>
		</collection>
	</resultMap>
	
	<select id="selectTransactions" resultMap="transaction">
		SELECT 
			t.id t_id, t.uuid, t.user_id, t.description, t.number, t.date, t.deleted, t.created t_created, t.modified t_modified, 
			s.id s_id, s.amount, s.from_source, s.to_source, s.memo, s.created s_created, s.modified s_modified,
			fs.name from_source_name, ts.name to_source_name
		FROM transactions t
		LEFT JOIN splits s ON s.transaction_id = t.id
		INNER JOIN sources fs ON fs.id = s.from_source
		INNER JOIN sources ts ON ts.id = s.to_source
		WHERE t.user_id = #{user.id}
		<if test="_parameter.containsKey('source')">
			AND (s.from_source = #{source.id} OR s.to_source = #{source.id})
		</if>
		ORDER BY t.date DESC
	</select>
	
	<select id="selectTransactionCount" resultType="int">
		SELECT 
			count(id)
		FROM transactions
		WHERE user_id = #{user.id} AND uuid = #{uuid}
	</select>

	<select id="selectDescriptions" resultMap="transaction">
		SELECT 
			t.description, t.number, s.amount, s.from_source, s.to_source
		FROM transactions t
		LEFT JOIN splits s ON s.transaction_id = t.id
		WHERE t.deleted = 'N' AND t.user_id = #{user.id}
		ORDER BY t.date DESC
	</select>
	
	<insert id="insertTransaction">
		<selectKey keyProperty="transaction.id" resultType="long" order="BEFORE">
			SELECT coalesce(max(id), 0) + 1 from transactions
		</selectKey>
		INSERT INTO transactions (
			id, uuid, user_id, description, number, date, deleted, created, modified

		)
		values (#{transaction.id}, #{transaction.uuid}, #{user.id}, #{transaction.description}, #{transaction.number,jdbcType=VARCHAR}, #{transaction.date}, <choose><when test="transaction.deleted == true">'Y'</when><otherwise>'N'</otherwise></choose>, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	</insert>
	
	<insert id="insertSplit">
		<selectKey keyProperty="split.id" resultType="long" order="BEFORE">
			SELECT coalesce(max(id), 0) + 1 from splits
		</selectKey>
		INSERT INTO splits (
			id, transaction_id, amount, from_source, to_source, memo, created, modified
		)
		values (#{split.id}, #{split.transactionId}, #{split.amount}, #{split.fromSource}, #{split.toSource}, #{split.memo,jdbcType=VARCHAR}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	</insert>
	
	<update id="updateTransaction">
		UPDATE transactions
		SET 
			description = #{transaction.description},
			number = #{transaction.number},
			date = #{transaction.date},
			deleted = <choose><when test="transaction.deleted == true">'Y'</when><otherwise>'N'</otherwise></choose>,
			modified = CURRENT_TIMESTAMP
		WHERE id = #{transaction.id} AND user_id = #{user.id}
	</update>
	
	<delete id="deleteTransaction">
		DELETE FROM transactions
		WHERE id = #{transaction.id}
	</delete>
	<delete id="deleteSplits">
		DELETE FROM splits
		WHERE transaction_id = #{transaction.id}
	</delete>
</mapper>