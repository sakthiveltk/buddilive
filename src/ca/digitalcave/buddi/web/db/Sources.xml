<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ca.digitalcave.buddi.web.db.Sources">
	<select id="selectAccounts" resultType="ca.digitalcave.buddi.web.model.Source">
		SELECT * FROM sources WHERE user_id = #{user.id} AND (type = 'D' OR type = 'C')
	</select>
	
	<resultMap id="account" type="ca.digitalcave.buddi.web.model.Account">
		<id column="a_id" property="id" />
		<result column="a_user_id" property="userId"/>
		<result column="a_uuid" property="uuid"/>
		<result column="a_name" property="name"/>
		<result column="a_start_date" property="startDate"/>
		<result column="a_account_type" property="accountType" />
		<result column="a_deleted" property="deleted" typeHandler="ca.digitalcave.buddi.web.db.handler.BooleanHandler"/>
		<result column="a_type" property="type"/>
		<result column="a_start_balance" property="startBalance"/>
		<result column="a_period_type" property="periodType"/>
		<result column="a_created" property="created"/>
		<result column="a_modified" property="modified"/>
		<result column="a_balance" property="balance"/>
	</resultMap>
	
	<resultMap id="accountsByType" type="ca.digitalcave.buddi.web.model.AccountType">
		<id column="a_account_type" property="accountType" />
		<id column="a_type" property="type" />
		<collection property="accounts" resultMap="account"/>
	</resultMap>	
	
	
	<select id="selectAccountsWithBalancesByType" resultMap="accountsByType">
		SELECT 
			a.id a_id, a.user_id a_user_id, a.uuid a_uuid, a.name a_name, a.start_date a_name, a.deleted a_deleted, a.type a_type, a.account_type a_account_type, a.start_balance a_start_balance, a.created, a.modified,
			coalesce(a.start_balance, 0) + coalesce(sum(to_splits.amount), 0) - coalesce(sum(from_splits.amount), 0) as a_balance
		FROM sources a
		LEFT JOIN splits to_splits ON to_splits.to_source = a.id
		LEFT JOIN splits from_splits ON from_splits.from_source = a.id
		WHERE user_id = #{user.id} AND (type = 'D' OR type = 'C')
		GROUP BY 
			a.id, a.user_id, a.uuid, a.name, a.start_date, a.deleted, a.type, a.account_type, a.start_balance, a.period_type, a.parent, a.created, a.modified
		ORDER BY a.type DESC, a.account_type, a.name
	</select>
	
	<select id="selectAccountsByAccountType" resultMap="account">
		SELECT 
			a.id a_id, a.user_id a_user_id, a.uuid a_uuid, a.name a_name, a.start_date a_name, a.deleted a_deleted, a.type a_type, a.account_type a_account_type, a.start_balance a_start_balance, a.created, a.modified
		FROM sources a
		LEFT JOIN splits to_splits ON to_splits.to_source = a.id
		LEFT JOIN splits from_splits ON from_splits.from_source = a.id
		WHERE user_id = #{user.id} AND account_type = #{accountType} AND (type = 'D' OR type = 'C')
		ORDER BY a.type DESC, a.account_type, a.name
	</select>

	<select id="selectSource" resultType="ca.digitalcave.buddi.web.model.Source">
		SELECT * FROM sources 
		WHERE user_id = #{user.id}
			<if test="id != null">
				and (id = #{id} or uuid = #{id})
			</if>
	</select>
	
	<select id="selectSources" resultType="ca.digitalcave.buddi.web.model.Source">
		SELECT * FROM sources WHERE user_id = #{user.id}
	</select>
	
	<insert id="insertAccount">
		<selectKey keyProperty="account.id" resultType="int" order="BEFORE">
			SELECT coalesce(max(id), 0) + 1 from sources
		</selectKey>
		INSERT INTO sources (
			id,
			user_id,
			uuid,
			name,
			start_date,
			deleted,
			type,
			account_type,
			start_balance,
			created,
			modified
		)
		VALUES (
			#{account.id},
			#{user.id},
			#{account.uuid},
			#{account.name},
			#{account.startDate},
			<choose><when test="account.deleted == true">'Y'</when><otherwise>'N'</otherwise></choose>,
			#{account.type},
			#{account.accountType,jdbcType=VARCHAR},
			#{account.startBalance,jdbcType=BIGINT},
			CURRENT_TIMESTAMP,
			CURRENT_TIMESTAMP
		)
	</insert>

	<insert id="updateAccount">
		UPDATE sources
		SET
			uuid = #{account.uuid},
			name = #{account.name},
			start_date = #{account.startDate},
			deleted = <choose><when test="account.deleted == true">'Y'</when><otherwise>'N'</otherwise></choose>,
			type = #{account.type},
			account_type = #{account.accountType},
			start_balance = #{account.startBalance,jdbcType=BIGINT},
			modified = CURRENT_TIMESTAMP
		WHERE id = #{account.id} AND user_id = #{user.id}
	</insert>
	<update id="updateSourceDeleted">
		UPDATE sources 
		SET 
			deleted = <choose><when test="source.deleted == true">'Y'</when><otherwise>'N'</otherwise></choose>, 
			modified = CURRENT_TIMESTAMP
		WHERE id = #{source.id} AND user_id = #{user.id}
	</update>

</mapper>
